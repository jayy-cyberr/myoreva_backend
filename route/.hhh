// <!DOCTYPE html>
// <html lang="en">
// <head>
//     <meta charset="UTF-8">
//     <meta name="viewport" content="width=device-width, initial-scale=1.0">
//     <title>MyOreva - Admin Dashboard</title>
//     <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
//     <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
//     <style>
//         * {
//             margin: 0;
//             padding: 0;
//             box-sizing: border-box;
//         }

//         body {
//             font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
//             background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
//             min-height: 100vh;
//             color: #333;
//         }

//         .container {
//             max-width: 1400px;
//             margin: 0 auto;
//             padding: 20px;
//         }

//         .header {
//             background: rgba(255, 255, 255, 0.95);
//             backdrop-filter: blur(10px);
//             border-radius: 15px;
//             padding: 20px 30px;
//             margin-bottom: 30px;
//             box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//             display: flex;
//             justify-content: space-between;
//             align-items: center;
//         }

//         .header h1 {
//             color: #2d3748;
//             font-size: 2rem;
//             font-weight: 700;
//         }

//         .header .user-info {
//             display: flex;
//             align-items: center;
//             gap: 15px;
         
//         }

//         .stats-grid {
//             display: grid;
//             grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
//             gap: 20px;
//             margin-bottom: 30px;
//         }

//         .stat-card {
//             background: rgba(255, 255, 255, 0.95);
//             backdrop-filter: blur(10px);
//             border-radius: 15px;
//             padding: 25px;
//             box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//             transition: transform 0.3s ease, box-shadow 0.3s ease;
//             position: relative;
//             overflow: hidden;
//         }

//         .stat-card::before {
//             content: '';
//             position: absolute;
//             top: 0;
//             left: 0;
//             right: 0;
//             height: 4px;
//             background: linear-gradient(90deg, #667eea, #764ba2);
//         }

//         .stat-card:hover {
//             transform: translateY(-5px);
//             box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
//         }

//         .stat-card .icon {
//             font-size: 2.5rem;
//             margin-bottom: 15px;
//             opacity: 0.8;
//         }

//         .stat-card.total .icon { color: #4299e1; }
//         .stat-card.revenue .icon { color: #48bb78; }
//         .stat-card.pending .icon { color: #ed8936; }
//         .stat-card.delivered .icon { color: #38b2ac; }

//         .stat-card h3 {
//             font-size: 2.5rem;
//             font-weight: 700;
//             margin-bottom: 5px;
//             color: #2d3748;
//         }

//         .stat-card p {
//             color: #718096;
//             font-size: 1rem;
//             font-weight: 500;
//         }
// .dashboard-content {
//             margin-bottom: 30px;
//         }

//         .orders-section {
//             background: rgba(255, 255, 255, 0.95);
//             backdrop-filter: blur(10px);
//             border-radius: 15px;
//             box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//             overflow: hidden;
//         }

//         .section-header {
//             background: linear-gradient(135deg, #667eea, #764ba2);
//             color: white;
//             padding: 20px 30px;
//             display: flex;
//             justify-content: space-between;
//             align-items: center;
//         }

//         .section-header h2 {
//             font-size: 1.5rem;
//             font-weight: 600;
//         }

//         .filters {
//             padding: 20px 30px;
//             background: #f8fafc;
//             border-bottom: 1px solid #e2e8f0;
//             display: flex;
//             flex-wrap: wrap;
//             gap: 15px;
//             align-items: center;
//         }

//         .filter-group {
//             display: flex;
//             flex-direction: column;
//             gap: 5px;
//         }

//         .filter-group label {
//             font-size: 0.875rem;
//             font-weight: 500;
//             color: #4a5568;
//         }

//         .filter-group input,
//         .filter-group select {
//             padding: 8px 12px;
//             border: 2px solid #e2e8f0;
//             border-radius: 8px;
//             font-size: 0.875rem;
//             transition: border-color 0.3s ease, box-shadow 0.3s ease;
//         }

//         .filter-group input:focus,
//         .filter-group select:focus {
//             outline: none;
//             border-color: #667eea;
//             box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
//         }

//         .btn {
//             padding: 10px 20px;
//             border: none;
//             border-radius: 8px;
//             font-size: 0.875rem;
//             font-weight: 500;
//             cursor: pointer;
//             transition: all 0.3s ease;
//             display: inline-flex;
//             align-items: center;
//             gap: 8px;
           
//         }

//         .btn-primary {
//             background: linear-gradient(135deg, #667eea, #764ba2);
//             color: white;
//         }

//         .btn-primary:hover {
//             transform: translateY(-2px);
//             box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
//         }

//         .btn-secondary {
//             background: #e2e8f0;
//             color: #4a5568;
//         }

//         .btn-secondary:hover {
//             background: #cbd5e0;
//         }

//         .btn-success {
//             background: #48bb78;
//             color: white;
//         }

//         .btn-danger {
//             background: #f56565;
//             color: white;
//         }

//         .export-buttons {
//             display: flex;
//             gap: 10px;
        
//         }

//         .orders-table {
//             width: 100%;
//             border-collapse: collapse;
//         }

//         .orders-table th,
//         .orders-table td {
//             padding: 15px;
//             text-align: left;
//             border-bottom: 1px solid #e2e8f0;
//         }

//         .orders-table th {
//             background: #f8fafc;
//             font-weight: 600;
//             color: #2d3748;
//             position: sticky;
//             top: 0;
//         }

//         .orders-table tr:hover {
//             background: #f8fafc;
//         }

//         .status-badge {
//             padding: 4px 12px;
//             border-radius: 20px;
//             font-size: 0.75rem;
//             font-weight: 600;
//             text-transform: uppercase;
//         }

//         .status-pending {
//             background: #fed7d7;
//             color: #c53030;
//         }

//         .status-processing {
//             background: #feebc8;
//             color: #dd6b20;
//         }

//         .status-delivered {
//             background: #c6f6d5;
//             color: #2f855a;
//         }

//         .status-cancelled {
//             background: #e2e8f0;
//             color: #4a5568;
//         }

//         .chart-container {
//             background: rgba(255, 255, 255, 0.95);
//             backdrop-filter: blur(10px);
//             border-radius: 15px;
//             box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//             overflow: hidden;
//             margin-top: 30px; 
//         }

//         .chart-content {
//             padding: 20px;
//             height: 400px;
//         }

//         .modal {
//             display: none;
//             position: fixed;
//             z-index: 1000;
//             left: 0;
//             top: 0;
//             width: 100%;
//             height: 100%;
//             background: rgba(0, 0, 0, 0.5);
//             backdrop-filter: blur(5px);
//         }

//         .modal-content {
//             background: white;
//             margin: 5% auto;
//             padding: 0;
//             border-radius: 15px;
//             width: 90%;
//             max-width: 600px;
//             max-height: 80vh;
//             overflow: hidden;
//             box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
//         }

//         .modal-header {
//             background: linear-gradient(135deg, #667eea, #764ba2);
//             color: white;
//             padding: 20px 30px;
//             display: flex;
//             justify-content: space-between;
//             align-items: center;
         
//         }

//         .modal-body {
//             padding: 30px;
//             max-height: 60vh;
//             overflow-y: auto;
//         }

//         .close {
//             color: white;
//             font-size: 28px;
//             font-weight: bold;
//             cursor: pointer;
//             transition: opacity 0.3s ease;
//         }

//         .close:hover {
//             opacity: 0.7;
//         }

//         .order-detail {
//             display: grid;
//             grid-template-columns: 1fr 1fr;
//             gap: 20px;
//             margin-bottom: 20px;
//         }

//         .order-detail .detail-item {
//             background: #f8fafc;
//             padding: 15px;
//             border-radius: 8px;
//             border-left: 4px solid #667eea;
//         }

//         .order-detail .detail-item strong {
//             display: block;
//             color: #2d3748;
//             margin-bottom: 5px;
//             font-size: 0.875rem;
//             text-transform: uppercase;
//             letter-spacing: 0.5px;
//         }

//         .pagination {
//             padding: 20px 30px;
//             display: flex;
//             justify-content: center;
//             align-items: center;
//             gap: 10px;
//             background: #f8fafc;
//         }

//         .pagination button {
//             padding: 8px 12px;
//             border: 1px solid #e2e8f0;
//             background: white;
//             border-radius: 6px;
//             cursor: pointer;
//             transition: all 0.3s ease;
//         }

//         .pagination button:hover:not(:disabled) {
//             background: #667eea;
//             color: white;
//         }

//         .pagination button:disabled {
//             opacity: 0.5;
//             cursor: not-allowed;
//         }

//         .pagination .current {
//             background: #667eea;
//             color: white;
//             border-color: #667eea;
//         }

//         .loading {
//             display: none;
//             text-align: center;
//             padding: 40px;
//             color: #718096;
//         }

//         .loading i {
//             font-size: 2rem;
//             animation: spin 1s linear infinite;
//         }

//         @keyframes spin {
//             0% { transform: rotate(0deg); }
//             100% { transform: rotate(360deg); }
//         }

//         .no-data {
//             text-align: center;
//             padding: 40px;
//             color: #718096;
//         }

//         .no-data i {
//             font-size: 3rem;
//             margin-bottom: 15px;
//             opacity: 0.5;
//         }

//        @media (max-width: 768px) {
//             .filters {
//                 flex-direction: column;
//                 align-items: stretch;
//             }
            
//             .header {
//                 flex-direction: column;
//                 gap: 15px;
//             }
            
//             .export-buttons {
//                 flex-direction: column;
//             }

//             .orders-table {
//                 font-size: 0.875rem;
//             }

//             .orders-table th,
//             .orders-table td {
//                 padding: 10px 8px;
//             }
//         }
//     </style>
// </head>
// <body>
//     <div class="container">
//         <!-- Header -->
//         <div class="header">
//             <h1><i class="fas fa-tachometer-alt"></i> MyOreva Admin Dashboard</h1>
//             <div class="user-info">
//                 <span><i class="fas fa-user-circle"></i> Admin</span>
//                 <div class="export-buttons">
//                     <button class="btn btn-secondary" onclick="exportToExcel()">
//                         <i class="fas fa-file-excel"></i> Excel
//                     </button>
//                     <button class="btn btn-secondary" onclick="exportToPDF()">
//                         <i class="fas fa-file-pdf"></i> PDF
//                     </button>
//                 </div>
//             </div>
//         </div>

//         <!-- Statistics Cards -->
//         <div class="stats-grid">
//             <div class="stat-card total">
//                 <i class="fas fa-shopping-cart icon"></i>
//                 <h3 id="totalOrders">-</h3>
//                 <p>Total Orders</p>
//             </div>
//             <div class="stat-card revenue">
//                 <i class="fas fa-money-bill-wave icon"></i>
//                 <h3 id="totalRevenue">₦-</h3>
//                 <p>Total Revenue</p>
//             </div>
//             <div class="stat-card pending">
//                 <i class="fas fa-clock icon"></i>
//                 <h3 id="pendingOrders">-</h3>
//                 <p>Pending Orders</p>
//             </div>
//             <div class="stat-card delivered">
//                 <i class="fas fa-check-circle icon"></i>
//                 <h3 id="deliveredOrders">-</h3>
//                 <p>Delivered Orders</p>
//             </div>
//         </div>

//         <!-- Dashboard Content (only orders-section) -->
//         <div class="dashboard-content">
//             <!-- Orders Section -->
//             <div class="orders-section">
//                 <div class="section-header">
//                     <h2><i class="fas fa-list"></i> Orders Management</h2>
//                     <span id="orderCount">0 orders</span>
//                 </div>

//                 <!-- Filters -->
//                 <div class="filters">
//                     <div class="filter-group">
//                         <label>Search</label>
//                         <input type="text" id="searchInput" placeholder="Name, phone, address...">
//                     </div>
//                     <div class="filter-group">
//                         <label>Status</label>
//                         <select id="statusFilter">
//                             <option value="all">All Status</option>
//                             <option value="pending">Pending</option>
//                             <option value="processing">Processing</option>
//                             <option value="delivered">Delivered</option>
//                             <option value="cancelled">Cancelled</option>
//                         </select>
//                     </div>
//                     <div class="filter-group">
//                         <label>Package</label>
//                         <select id="packageFilter">
//                             <option value="all">All Packages</option>
//                             <!-- <option value="regular">Regular</option>
//                             <option value="silver">Silver</option>
//                             <option value="family">Family</option> -->
//                         </select>
//                     </div>
//                     <div class="filter-group">
//                         <label>From Date</label>
//                         <input type="date" id="startDate">
//                     </div>
//                     <div class="filter-group">
//                         <label>To Date</label>
//                         <input type="date" id="endDate">
//                     </div>
//                     <div class="filter-group">
//                         <label>&nbsp;</label>
//                         <button class="btn btn-primary" onclick="applyFilters()">
//                             <i class="fas fa-filter"></i> Apply Filters
//                         </button>
//                     </div>
//                 </div>

//                 <!-- Loading -->
//                 <div class="loading" id="loading">
//                     <i class="fas fa-spinner"></i>
//                     <p>Loading orders...</p>
//                 </div>

//                 <!-- Orders Table -->
//                 <div style="overflow-x: auto;">
//                     <table class="orders-table" id="ordersTable">
//                         <thead>
//                             <tr>
//                                 <th>Full Name</th>
//                                 <th>Phone</th>
//                                 <th>Package</th>
//                                 <th>Address</th>
//                                 <th>Date</th>
//                                 <th>Status</th>
//                                 <th>Actions</th>
//                             </tr>
//                         </thead>
//                         <tbody id="ordersTableBody">
//                         </tbody>
//                     </table>
//                 </div>

        
//                 <div class="no-data" id="noData" style="display: none;">
//                     <i class="fas fa-inbox"></i>
//                     <h3>No orders found</h3>
//                     <p>Try adjusting your filters or check back later.</p>
//                 </div>

       
//                 <div class="pagination" id="pagination">
//                 </div>
//             </div>
//         </div>

      
//         <div class="chart-container">
//             <div class="section-header">
//                 <h2><i class="fas fa-chart-pie"></i> Package Analytics</h2>
//             </div>
//             <div class="chart-content">
//                 <canvas id="packageChart"></canvas>
//             </div>
//         </div>

  
//         <div id="orderModal" class="modal">
//             <div class="modal-content">
//                 <div class="modal-header">
//                     <h2><i class="fas fa-eye"></i> Order Details</h2>
//                     <span class="close" onclick="closeModal()">&times;</span>
//                 </div>
//                 <div class="modal-body" id="orderDetails">
//                 </div>
//             </div>
//         </div>

//         <!-- Status Update Modal -->
//         <div id="statusModal" class="modal">
//             <div class="modal-content">
//                 <div class="modal-header">
//                     <h2><i class="fas fa-edit"></i> Update Order Status</h2>
//                     <span class="close" onclick="closeStatusModal()">&times;</span>
//                 </div>
//                 <div class="modal-body">
//                     <div class="filter-group">
//                         <label>Select New Status</label>
//                         <select id="newStatus" style="width: 100%; padding: 12px;">
//                             <!-- <option value="pending">Pending</option> -->
//                             <option value="processing">Processing</option>
//                             <option value="delivered">Delivered</option>
//                             <option value="cancelled">Cancelled</option>
//                         </select>
//                     </div>
//                     <div style="margin-top: 20px; text-align: right;">
//                         <button class="btn btn-secondary" onclick="closeStatusModal()">Cancel</button>
//                         <button class="btn btn-primary" onclick="updateOrderStatus()" style="margin-left: 10px;">
//                             <i class="fas fa-save"></i> Update Status
//                         </button>
//                     </div>
//                 </div>
//             </div>
//         </div>
//     </div>


//     <script>
//         let currentPage = 1;
//         let currentOrderId = null;
//         let packageChart = null;

//         // Initialize dashboard
//         document.addEventListener('DOMContentLoaded', function() {
//             loadStats();
//             loadOrders();
//             initializeChart();
//         });

//         // Load statistics
//         async function loadStats() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/admin/stats');
//                 const data = await response.json();
                
//                 if (data.data) {
//                     document.getElementById('totalOrders').textContent = data.data.totalOrders;
//                     document.getElementById('totalRevenue').textContent = `₦${data.data.totalRevenue.toLocaleString()}`;
                    
//                     // Calculate pending and delivered from status breakdown
//                     let pendingCount = 0;
//                     let deliveredCount = 0;
                    
//                     data.data.statusBreakdown.forEach(status => {
//                         if (status._id === 'pending') pendingCount = status.count;
//                         if (status._id === 'delivered') deliveredCount = status.count;
//                     });
                    
//                     document.getElementById('pendingOrders').textContent = pendingCount;
//                     document.getElementById('deliveredOrders').textContent = deliveredCount;
                    
//                     // Update chart
//                     updatePackageChart(data.data.packageBreakdown);
//                 }
//             } catch (error) {
//                 console.error('Error loading stats:', error);
//             }
//         }

//         // Load orders with filters
//         async function loadOrders(page = 1) {
//             const loading = document.getElementById('loading');
//             const table = document.getElementById('ordersTable');
//             const noData = document.getElementById('noData');
            
//             loading.style.display = 'block';
//             table.style.display = 'none';
//             noData.style.display = 'none';
            
//             try {
//                 const params = new URLSearchParams({
//                     page: page,
//                     limit: 10,
//                     status: document.getElementById('statusFilter').value,
//                     package: document.getElementById('packageFilter').value,
//                     search: document.getElementById('searchInput').value,
//                     startDate: document.getElementById('startDate').value,
//                     endDate: document.getElementById('endDate').value
//                 });
                
//                 const response = await fetch(`http://localhost:6500/api/admin/orders?${params}`);
//                 const data = await response.json();
                
//                 if (data.data && data.data.length > 0) {
//                     displayOrders(data.data);
//                     displayPagination(data.pagination);
//                     document.getElementById('orderCount').textContent = `${data.pagination.totalOrders} orders`;
//                     table.style.display = 'table';
//                 } else {
//                     noData.style.display = 'block';
//                     document.getElementById('orderCount').textContent = '0 orders';
//                     document.getElementById('pagination').innerHTML = '';
//                 }
                
//                 currentPage = page;
//             } catch (error) {
//                 console.error('Error loading orders:', error);
//                 noData.style.display = 'block';
//             } finally {
//                 loading.style.display = 'none';
//             }
//         }

//         // Display orders in table
//         function displayOrders(orders) {
//             const tbody = document.getElementById('ordersTableBody');
//             tbody.innerHTML = '';
            
//             orders.forEach(order => {
//                 const row = document.createElement('tr');
//                 row.innerHTML = `
//                     <td>${order.fullName}</td>
//                     <td>${Array.isArray(order.phone) ? order.phone.join(', ') : order.phone}</td>
//                     <td><span class="status-badge status-${order.package}">${order.package.toUpperCase()}</span></td>
//                     <td>${order.address}, ${order.city}</td>
//                     <td>${new Date(order.createdAt).toLocaleDateString()}</td>
//                     <td><span class="status-badge status-${order.status}">${order.status.toUpperCase()}</span></td>
//                     <td>
//                         <button class="btn btn-secondary" onclick="viewOrderDetails('${order._id}')" style="margin-right: 5px;">
//                             <i class="fas fa-eye"></i>
//                         </button>
//                         <button class="btn btn-primary" onclick="openStatusModal('${order._id}', '${order.status}')" style="margin-right: 5px;">
//                             <i class="fas fa-edit"></i>
//                         </button>
//                         <button class="btn btn-danger" onclick="deleteOrder('${order._id}')">
//                             <i class="fas fa-trash"></i>
//                         </button>
//                     </td>
//                 `;
//                 tbody.appendChild(row);
//             });
//         }

//         // Display pagination
//         function displayPagination(pagination) {
//             const paginationDiv = document.getElementById('pagination');
//             paginationDiv.innerHTML = '';
            
//             // Previous button
//             const prevBtn = document.createElement('button');
//             prevBtn.innerHTML = '<i class="fas fa-chevron-left"></i> Previous';
//             prevBtn.disabled = !pagination.hasPrev;
//             prevBtn.onclick = () => loadOrders(pagination.currentPage - 1);
//             paginationDiv.appendChild(prevBtn);
            
//             // Page numbers
//             const startPage = Math.max(1, pagination.currentPage - 2);
//             const endPage = Math.min(pagination.totalPages, pagination.currentPage + 2);
            
//             for (let i = startPage; i <= endPage; i++) {
//                 const pageBtn = document.createElement('button');
//                 pageBtn.textContent = i;
//                 pageBtn.className = i === pagination.currentPage ? 'current' : '';
//                 pageBtn.onclick = () => loadOrders(i);
//                 paginationDiv.appendChild(pageBtn);
//             }
            
//             // Next button
//             const nextBtn = document.createElement('button');
//             nextBtn.innerHTML = 'Next <i class="fas fa-chevron-right"></i>';
//             nextBtn.disabled = !pagination.hasNext;
//             nextBtn.onclick = () => loadOrders(pagination.currentPage + 1);
//             paginationDiv.appendChild(nextBtn);
//         }

//         // Apply filters
//         function applyFilters() {
//             currentPage = 1;
//             loadOrders(1);
//         }

//         // View order details
//         async function viewOrderDetails(orderId) {
//             try {
//                 const response = await fetch(`http://localhost:6500/api/admin/orders/${orderId}`);
//                 const data = await response.json();
                
//                 if (data.data) {
//                     const order = data.data;
//                     const detailsHtml = `
//                         <div class="order-detail">
//                             <div class="detail-item">
//                                 <strong>Full Name</strong>
//                                 ${order.fullName}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Phone Numbers</strong>
//                                 ${Array.isArray(order.phone) ? order.phone.join(', ') : order.phone}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>WhatsApp Phone</strong>
//                                 ${order.whatsappPhone || 'Not provided'}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Package</strong>
//                                 ${order.package.toUpperCase()}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Address</strong>
//                                 ${order.address}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>City</strong>
//                                 ${order.city}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>State</strong>
//                                 ${order.state}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Price</strong>
//                                 ₦${order.price.toLocaleString()}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Availability</strong>
//                                 ${order.availability.toUpperCase()}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Status</strong>
//                                 <span class="status-badge status-${order.status}">${order.status.toUpperCase()}</span>
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Order Date</strong>
//                                 ${new Date(order.createdAt).toLocaleString()}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Last Updated</strong>
//                                 ${new Date(order.updatedAt).toLocaleString()}
//                             </div>
//                         </div>
//                     `;
                    
//                     document.getElementById('orderDetails').innerHTML = detailsHtml;
//                     document.getElementById('orderModal').style.display = 'block';
//                 }
//             } catch (error) {
//                 console.error('Error loading order details:', error);
//                 alert('Error loading order details');
//             }
//         }

//         // Open status update modal
//         function openStatusModal(orderId, currentStatus) {
//             currentOrderId = orderId;
//             document.getElementById('newStatus').value = currentStatus;
//             document.getElementById('statusModal').style.display = 'block';
//         }

//         // Update order status
// async function updateOrderStatus() {
//   if (!currentOrderId) return;
//   try {
//     const newStatus = document.getElementById('newStatus').value;
//     const response = await fetch(`http://localhost:6500/api/admin/orders/${currentOrderId}/status`, {
//       method: 'PUT',
//       headers: {
//         'Content-Type': 'application/json'
//       },
//       body: JSON.stringify({ status: newStatus })
//     });
    
//     if (response.ok) {
//       const result = await response.json();
//       closeStatusModal();
//       loadOrders(currentPage);
//       loadStats();
//       localStorage.ste(hue)
//       let alertMessage = 'Order status updated successfully!';
      
//       if (result.notifications) {
//         const { sms, email } = result.notifications;
        
//         if (sms.success) {
//           alertMessage += '\n✅ SMS notification sent to customer';
//         } else if (sms.message !== 'No SMS sent') {
//           alertMessage += '\n⚠️ SMS notification failed';
//         }
        
//         if (email.success) {
//           alertMessage += '\n✅ Email notification sent to customer';
//         } else if (email.message !== 'No email sent') {
//           alertMessage += '\n⚠️ Email notification failed';
//         }
//       }
      
//       alert(alertMessage);
//     } else {
//       alert('Error updating order status');
//     }
//   } catch (error) {
//     console.error('Error updating status:', error);
//     alert('Error updating order status');
//   }
// }
//         // Delete order
//         async function deleteOrder(orderId) {
//             if (!confirm('Are you sure you want to delete this order?')) return;
            
//             try {
//                 const response = await fetch(`http://localhost:6500/api/admin/orders/${orderId}`, {
//                     method: 'DELETE'
//                 });
                
//                 if (response.ok) {
//                     loadOrders(currentPage);
//                     loadStats();
//                     alert('Order deleted successfully!');
//                 } else {
//                     alert('Error deleting order');
//                 }
//             } catch (error) {
//                 console.error('Error deleting order:', error);
//                 alert('Error deleting order');
//             }
//         }

//         // Initialize chart
//         function initializeChart() {
//             const ctx = document.getElementById('packageChart').getContext('2d');
//             packageChart = new Chart(ctx, {
//                 type: 'doughnut',
//                 data: {
//                     labels: [],
//                     datasets: [{
//                         data: [],
//                         backgroundColor: [
//                             '#667eea',
//                             '#764ba2',
//                             '#f093fb',
//                             '#f5576c',
//                             '#4facfe'
//                         ],
//                         borderWidth: 0
//                     }]
//                 },
//                 options: {
//                     responsive: true,
//                     maintainAspectRatio: false,
//                     plugins: {
//                         legend: {
//                             position: 'bottom',
//                             labels: {
//                                 padding: 20,
//                                 font: {
//                                     size: 12
//                                 }
//                             }
//                         }
//                     }
//                 }
//             });
//         }

//         // Update package chart
//         function updatePackageChart(packageData) {
//             if (!packageChart) return;
            
//             const labels = [];
//             const data = [];
            
//             packageData.forEach(pkg => {
//                 labels.push(pkg._id.toUpperCase());
//                 data.push(pkg.count);
//             });
            
//             packageChart.data.labels = labels;
//             packageChart.data.datasets[0].data = data;
//             packageChart.update();
//         }

//         // Export functions
//         async function exportToExcel() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/admin/export/excel');
//                 const blob = await response.blob();
//                 const url = window.URL.createObjectURL(blob);
//                 const a = document.createElement('a');
//                 a.href = url;
//                 a.download = 'orders.xlsx';
//                 a.click();
//                 window.URL.revokeObjectURL(url);
//             } catch (error) {
//                 console.error('Error exporting to Excel:', error);
//                 alert('Error exporting to Excel');
//             }
//         }

//         async function exportToPDF() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/admin/export/pdf');
//                 const blob = await response.blob();
//                 const url = window.URL.createObjectURL(blob);
//                 const a = document.createElement('a');
//                 a.href = url;
//                 a.download = 'orders.pdf';
//                 a.click();
//                 window.URL.revokeObjectURL(url);
//             } catch (error) {
//                 console.error('Error exporting to PDF:', error);
//                 alert('Error exporting to PDF');
//             }
//         }

//         // Modal functions
//         function closeModal() {
//             document.getElementById('orderModal').style.display = 'none';
//         }

//         function closeStatusModal() {
//             document.getElementById('statusModal').style.display = 'none';
//             currentOrderId = null;
//         }

//         // Close modals when clicking outside
//         window.onclick = function(event) {
//             const orderModal = document.getElementById('orderModal');
//             const statusModal = document.getElementById('statusModal');
            
//             if (event.target === orderModal) {
//                 closeModal();
//             }
//             if (event.target === statusModal) {
//                 closeStatusModal();
//             }
//         }

//         // Add event listeners for real-time filtering
//         document.getElementById('searchInput').addEventListener('input', debounce(applyFilters, 500));
//         document.getElementById('statusFilter').addEventListener('change', applyFilters);
//         document.getElementById('packageFilter').addEventListener('change', applyFilters);
//         document.getElementById('startDate').addEventListener('change', applyFilters);
//         document.getElementById('endDate').addEventListener('change', applyFilters);

//         // Debounce function for search input
//         function debounce(func, wait) {
//             let timeout;
//             return function executedFunction(...args) {
//                 const later = () => {
//                     clearTimeout(timeout);
//                     func(...args);
//                 };
//                 clearTimeout(timeout);
//                 timeout = setTimeout(later, wait);
//             };
//         }
//     </script>
// </body>
// </html>













// Potential Improvements

// Authentication: Add authentication (e.g., JWT) to secure API calls. Include an Authorization header in fetch requests:
// javascriptheaders: {
//   'Content-Type': 'application/json',
//   'Authorization': `Bearer ${localStorage.getItem('token')}`
// }

// Error Handling: Enhance error messages in the UI (e.g., show specific errors like "Invalid status" instead of a generic alert).
// Real-Time Updates: Use WebSockets or polling to auto-refresh the table when orders change.
// Loading States: Add loading indicators for individual actions (e.g., status updates).
// Accessibility: Add ARIA attributes and keyboard navigation for better accessibility.
// Confirmation Modals: Replace alert and confirm with custom modals for a consistent UI.
// Chart Enhancements: Add more charts (e.g., orders over time) using additional backend aggregations.




































// const express = require("express");
// const { sendMessage } = require("../controller/twillioController")

// const twilioRoute =  express.Router();

// twilioRoute.post("/send", sendMessage);

// module.exports = twilioRoute















// const client = require("../config/twillioConfig")

// const sendMessage = async (req, res) => {
//   try {
//     const { phone, product } = req.body;

//     if (!phone || !product) {
//       return res.status(400).json({
//         message: "Phone number and product details are required",
//       });
//     }

//     const messageBody = `Thank you for ordering. Your product details: ${product}. We’ll contact you shortly.`;

//     const message = await client.messages.create({
//       body: messageBody,
//       from: process.env.TWILIO_PHONE_NUMBER,
//       to: phone.startsWith("+") ? phone : `+${phone}`,
//     });

//     res.status(200).json({
//       message: "SMS sent successfully",
//       sid: message.sid,
//     });
//   } catch (error) {
//     console.error("Error sending SMS:", error);
//     res.status(500).json({
//       message: "Failed to send SMS",
//       error: error.message,
//     });
//   }
// };

// module.exports = { sendMessage };




// const mongoose = require("mongoose");
// const orderSchema = require("../model/formModel");
// const client = require("../config/twillioConfig");
// const nodemailer = require("nodemailer");
// require("dotenv").config();

// // Define the model using the schema
// const Order = mongoose.model("Order", orderSchema);

// // Set up email transporter
// const transporter = nodemailer.createTransport({
//   host: process.env.APP_HOST,
//   port: process.env.APP_PORT,
//   secure: false,
//   auth: {
//     user: process.env.APP_USER,
//     pass: process.env.APP_PASS,
//   },
// });

// const addForm = async (req, res) => {
//   try {
//     const formData = req.body;

//     if (!formData) {
//       return res.status(400).json({
//         message: "No data sent from form",
//         status: "Bad Request",
//       });
//     }

//     const { fullName, address, package: packageType, phone } = formData;

//     if (!fullName || !address || !packageType || !phone) {
//       return res.status(400).json({
//         message: "Missing one or more required fields",
//         status: "Bad Request",
//       });
//     }

//     // Add default status if not provided
//     if (!formData.status) {
//       formData.status = 'pending';
//     }

//     // Save to MongoDB
//     const newOrder = new Order(formData);
//     await newOrder.save();

//     // Format phone number
//     const sendTo = Array.isArray(phone) ? phone[0] : phone;

//     // Format message content for SMS
//     const smsBody = `Hi ${fullName}, your order for the "${packageType}" package has been received. Address: ${address}. Your order will be processed shortly for delivery. Thank you!`;

//     // Send SMS via Twilio
//     await client.messages.create({
//       body: smsBody,
//       from: process.env.TWILIO_PHONE_NUMBER,
//       to: sendTo.startsWith("+") ? sendTo : `+${sendTo}`,
//     });

//     // Format email content for Admin
//     const adminMailOptions = {
//       from: `"Order Notification" <${process.env.APP_USER}>`,
//       to: process.env.ADMIN_EMAIL,
//       subject: `New Order Received - ${fullName}`,
//       html: `
//         <h3>New Order Details</h3>
//         <p><strong>Name:</strong> ${fullName}</p>
//         <p><strong>Address:</strong> ${address}</p>
//         <p><strong>Phone:</strong> ${phone}</p>
//         <p><strong>Package:</strong> ${packageType}</p>
//         <p><strong>Price:</strong> ₦${formData.price}</p>
//         <p><strong>Status:</strong> ${formData.status}</p>
//       `,
//     };

//     // Send email to admin
//     await transporter.sendMail(adminMailOptions);

//     res.status(201).json({
//       message: "Successfully added, SMS and Email sent",
//       status: "Success",
//       data: newOrder,
//     });
//   } catch (error) {
//     console.error("Error in addForm:", error);
//     res.status(500).json({
//       message: "An error occurred",
//       status: "Failed",
//       error: error.message,
//     });
//   }
// };

// module.exports = {
//   addForm,
// };




























// const mongoose = require("mongoose");
// const orderSchema = require("../model/formModel");
// const ExcelJS = require('exceljs');
// const PDFDocument = require('pdfkit');

// const Order = mongoose.model("Order", orderSchema);


// const getAllOrders = async (req, res) => {
//   try {
//     const {
//       page = 1,
//       limit = 10,
//       status,
//       package: packageFilter,
//       startDate,
//       endDate,
//       search
//     } = req.query;

//     // Build filter object
//     const filter = {};
    
//     if (status && status !== 'all') {
//       filter.status = status;
//     }
    
//     if (packageFilter && packageFilter !== 'all') {
//       filter.package = packageFilter;
//     }
    
//     if (startDate || endDate) {
//       filter.createdAt = {};
//       if (startDate) {
//         filter.createdAt.$gte = new Date(startDate);
//       }
//       if (endDate) {
//         filter.createdAt.$lte = new Date(endDate);
//       }
//     }
    
//     if (search) {
//       filter.$or = [
//         { fullName: { $regex: search, $options: 'i' } },
//         { phone: { $regex: search, $options: 'i' } },
//         { address: { $regex: search, $options: 'i' } }
//       ];
//     }

    
//     const skip = (page - 1) * limit;
    
 
//     const orders = await Order.find(filter)
//       .sort({ createdAt: -1 })
//       .skip(skip)
//       .limit(parseInt(limit));

//     const totalOrders = await Order.countDocuments(filter);
//     const totalPages = Math.ceil(totalOrders / limit);

//     res.status(200).json({
//       message: "Orders retrieved successfully",
//       data: orders,
//       pagination: {
//         currentPage: parseInt(page),
//         totalPages,
//         totalOrders,
//         hasNext: page < totalPages,
//         hasPrev: page > 1
//       }
//     });
//   } catch (error) {
//     console.error("Error retrieving orders:", error);
//     res.status(500).json({
//       message: "Failed to retrieve orders",
//       error: error.message
//     });
//   }
// };


// const getOrderStats = async (req, res) => {
//   try {

//     const totalOrders = await Order.countDocuments();
    

//     const revenueResult = await Order.aggregate([
//       { $group: { _id: null, total: { $sum: "$price" } } }
//     ]);
//     const totalRevenue = revenueResult.length > 0 ? revenueResult[0].total : 0;
    

//     const statusStats = await Order.aggregate([
//       { $group: { _id: "$status", count: { $sum: 1 } } }
//     ]);
    

//     const packageStats = await Order.aggregate([
//       { $group: { _id: "$package", count: { $sum: 1 } } }
//     ]);

//     const lastWeek = new Date();
//     lastWeek.setDate(lastWeek.getDate() - 7);
//     const recentOrders = await Order.countDocuments({
//       createdAt: { $gte: lastWeek }
//     });

//     res.status(200).json({
//       message: "Statistics retrieved successfully",
//       data: {
//         totalOrders,
//         totalRevenue,
//         recentOrders,
//         statusBreakdown: statusStats,
//         packageBreakdown: packageStats
//       }
//     });
//   } catch (error) {
//     console.error("Error retrieving statistics:", error);
//     res.status(500).json({
//       message: "Failed to retrieve statistics",
//       error: error.message
//     });
//   }
// };

// const updateOrderStatus = async (req, res) => {
//   try {
//     const { id } = req.params;
//     const { status } = req.body;

//     if (!status || !['pending', 'processing', 'delivered', 'cancelled'].includes(status)) {
//       return res.status(400).json({
//         message: "Invalid status. Must be: pending, processing, delivered, or cancelled"
//       });
//     }

//     const updatedOrder = await Order.findByIdAndUpdate(
//       id,
//       { status, updatedAt: new Date() },
//       { new: true }
//     );

//     if (!updatedOrder) {
//       return res.status(404).json({
//         message: "Order not found"
//       });
//     }

//     res.status(200).json({
//       message: "Order status updated successfully",
//       data: updatedOrder
//     });
//   } catch (error) {
//     console.error("Error updating order status:", error);
//     res.status(500).json({
//       message: "Failed to update order status",
//       error: error.message
//     });
//   }
// };


// const getOrderById = async (req, res) => {
//   try {
//     const { id } = req.params;
//     const order = await Order.findById(id);

//     if (!order) {
//       return res.status(404).json({
//         message: "Order not found"
//       });
//     }

//     res.status(200).json({
//       message: "Order retrieved successfully",
//       data: order
//     });
//   } catch (error) {
//     console.error("Error retrieving order:", error);
//     res.status(500).json({
//       message: "Failed to retrieve order",
//       error: error.message
//     });
//   }
// };


// const deleteOrder = async (req, res) => {
//   try {
//     const { id } = req.params;
//     const deletedOrder = await Order.findByIdAndDelete(id);

//     if (!deletedOrder) {
//       return res.status(404).json({
//         message: "Order not found"
//       });
//     }

//     res.status(200).json({
//       message: "Order deleted successfully",
//       data: deletedOrder
//     });
//   } catch (error) {
//     console.error("Error deleting order:", error);
//     res.status(500).json({
//       message: "Failed to delete order",
//       error: error.message
//     });
//   }
// };

// const exportToExcel = async (req, res) => {
//   try {
//     const orders = await Order.find().sort({ createdAt: -1 });
    
//     const workbook = new ExcelJS.Workbook();
//     const worksheet = workbook.addWorksheet('Orders');
    

//     worksheet.columns = [
//       { header: 'Full Name', key: 'fullName', width: 20 },
//       { header: 'Phone', key: 'phone', width: 15 },
//       { header: 'Package', key: 'package', width: 12 },
//       { header: 'Address', key: 'address', width: 30 },
//       { header: 'City', key: 'city', width: 15 },
//       { header: 'State', key: 'state', width: 15 },
//       { header: 'Price', key: 'price', width: 12 },
//       { header: 'Status', key: 'status', width: 12 },
//       { header: 'Date', key: 'createdAt', width: 15 }
//     ];
    
//     // Add data
//     orders.forEach(order => {
//       worksheet.addRow({
//         fullName: order.fullName,
//         phone: Array.isArray(order.phone) ? order.phone.join(', ') : order.phone,
//         package: order.package,
//         address: order.address,
//         city: order.city,
//         state: order.state,
//         price: order.price,
//         status: order.status,
//         createdAt: order.createdAt.toDateString()
//       });
//     });
    
//     res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
//     res.setHeader('Content-Disposition', 'attachment; filename=orders.xlsx');
    
//     await workbook.xlsx.write(res);
//     res.end();
//   } catch (error) {
//     console.error("Error exporting to Excel:", error);
//     res.status(500).json({
//       message: "Failed to export to Excel",
//       error: error.message
//     });
//   }
// };

// // Export orders to PDF
// const exportToPDF = async (req, res) => {
//   try {
//     const orders = await Order.find().sort({ createdAt: -1 });
    
//     const doc = new PDFDocument();
//     res.setHeader('Content-Type', 'application/pdf');
//     res.setHeader('Content-Disposition', 'attachment; filename=orders.pdf');
    
//     doc.pipe(res);
    

//     doc.fontSize(20).text('Orders Report', 50, 50);
//     doc.moveDown();
    

//     orders.forEach((order, index) => {
//       if (doc.y > 700) {
//         doc.addPage();
//       }
      
//       doc.fontSize(12)
//          .text(`Order ${index + 1}:`, 50, doc.y)
//          .text(`Name: ${order.fullName}`, 50, doc.y + 5)
//          .text(`Phone: ${Array.isArray(order.phone) ? order.phone.join(', ') : order.phone}`, 50, doc.y + 5)
//          .text(`Package: ${order.package}`, 50, doc.y + 5)
//          .text(`Address: ${order.address}`, 50, doc.y + 5)
//          .text(`Status: ${order.status}`, 50, doc.y + 5)
//          .text(`Price: ₦${order.price}`, 50, doc.y + 5)
//          .text(`Date: ${order.createdAt.toDateString()}`, 50, doc.y + 5);
      
//       doc.moveDown();
//     });
    
//     doc.end();
//   } catch (error) {
//     console.error("Error exporting to PDF:", error);
//     res.status(500).json({
//       message: "Failed to export to PDF",
//       error: error.message
//     });
//   }
// };

// module.exports = {
//   getAllOrders,
//   getOrderStats,
//   updateOrderStatus,
//   getOrderById,
//   deleteOrder,
//   exportToExcel,
//   exportToPDF
// };



// <!DOCTYPE html>
// <html lang="en">
// <head>
//     <meta charset="UTF-8">
//     <meta name="viewport" content="width=device-width, initial-scale=1.0">
//     <title>MyOreva - Admin Dashboard</title>
//     <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
//     <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
//     <style>
//         * {
//             margin: 0;
//             padding: 0;
//             box-sizing: border-box;
//         }

//         body {
//             font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
//             background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
//             min-height: 100vh;
//             color: #333;
//         }

//         .container {
//             max-width: 1400px;
//             margin: 0 auto;
//             padding: 20px;
//         }

//         .header {
//             background: rgba(255, 255, 255, 0.95);
//             backdrop-filter: blur(10px);
//             border-radius: 15px;
//             padding: 20px 30px;
//             margin-bottom: 30px;
//             box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//             display: flex;
//             justify-content: space-between;
//             align-items: center;
//         }

//         .header h1 {
//             color: #2d3748;
//             font-size: 2rem;
//             font-weight: 700;
//         }

//         .header .user-info {
//             display: flex;
//             align-items: center;
//             gap: 15px;
//         }

//         .stats-grid {
//             display: grid;
//             grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
//             gap: 20px;
//             margin-bottom: 30px;
//         }

//         .stat-card {
//             background: rgba(255, 255, 255, 0.95);
//             backdrop-filter: blur(10px);
//             border-radius: 15px;
//             padding: 25px;
//             box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//             transition: transform 0.3s ease, box-shadow 0.3s ease;
//             position: relative;
//             overflow: hidden;
//         }

//         .stat-card::before {
//             content: '';
//             position: absolute;
//             top: 0;
//             left: 0;
//             right: 0;
//             height: 4px;
//             background: linear-gradient(90deg, #667eea, #764ba2);
//         }

//         .stat-card:hover {
//             transform: translateY(-5px);
//             box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
//         }

//         .stat-card .icon {
//             font-size: 2.5rem;
//             margin-bottom: 15px;
//             opacity: 0.8;
//         }

//         .stat-card.total .icon { color: #4299e1; }
//         .stat-card.revenue .icon { color: #48bb78; }
//         .stat-card.pending .icon { color: #ed8936; }
//         .stat-card.delivered .icon { color: #38b2ac; }
//         .stat-card.newsletter .icon { color: #805ad5; }

//         .stat-card h3 {
//             font-size: 2.5rem;
//             font-weight: 700;
//             margin-bottom: 5px;
//             color: #2d3748;
//         }

//         .stat-card p {
//             color: #718096;
//             font-size: 1rem;
//             font-weight: 500;
//         }

//         .dashboard-content {
//             margin-bottom: 30px;
//         }

//         .orders-section,
//         .newsletter-section {
//             background: rgba(255, 255, 255, 0.95);
//             backdrop-filter: blur(10px);
//             border-radius: 15px;
//             box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//             overflow: hidden;
//             margin-bottom: 30px;
//         }

//         .section-header {
//             background: linear-gradient(135deg, #667eea, #764ba2);
//             color: white;
//             padding: 20px 30px;
//             display: flex;
//             justify-content: space-between;
//             align-items: center;
//         }

//         .section-header h2 {
//             font-size: 1.5rem;
//             font-weight: 600;
//         }

//         .filters {
//             padding: 20px 30px;
//             background: #f8fafc;
//             border-bottom: 1px solid #e2e8f0;
//             display: flex;
//             flex-wrap: wrap;
//             gap: 15px;
//             align-items: center;
//         }

//         .filter-group {
//             display: flex;
//             flex-direction: column;
//             gap: 5px;
//         }

//         .filter-group label {
//             font-size: 0.875rem;
//             font-weight: 500;
//             color: #4a5568;
//         }

//         .filter-group input,
//         .filter-group select {
//             padding: 8px 12px;
//             border: 2px solid #e2e8f0;
//             border-radius: 8px;
//             font-size: 0.875rem;
//             transition: border-color 0.3s ease, box-shadow 0.3s ease;
//         }

//         .filter-group input:focus,
//         .filter-group select:focus {
//             outline: none;
//             border-color: #667eea;
//             box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
//         }

//         .btn {
//             padding: 10px 20px;
//             border: none;
//             border-radius: 8px;
//             font-size: 0.875rem;
//             font-weight: 500;
//             cursor: pointer;
//             transition: all 0.3s ease;
//             display: inline-flex;
//             align-items: center;
//             gap: 8px;
//         }

//         .btn-primary {
//             background: linear-gradient(135deg, #667eea, #764ba2);
//             color: white;
//         }

//         .btn-primary:hover {
//             transform: translateY(-2px);
//             box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
//         }

//         .btn-secondary {
//             background: #e2e8f0;
//             color: #4a5568;
//         }

//         .btn-secondary:hover {
//             background: #cbd5e0;
//         }

//         .btn-success {
//             background: #48bb78;
//             color: white;
//         }

//         .btn-danger {
//             background: #f56565;
//             color: white;
//         }

//         .export-buttons {
//             display: flex;
//             gap: 10px;
//         }

//         .orders-table,
//         .subscribers-table {
//             width: 100%;
//             border-collapse: collapse;
//         }

//         .orders-table th,
//         .orders-table td,
//         .subscribers-table th,
//         .subscribers-table td {
//             padding: 15px;
//             text-align: left;
//             border-bottom: 1px solid #e2e8f0;
//         }

//         .orders-table th,
//         .subscribers-table th {
//             background: #f8fafc;
//             font-weight: 600;
//             color: #2d3748;
//             position: sticky;
//             top: 0;
//         }

//         .orders-table tr:hover,
//         .subscribers-table tr:hover {
//             background: #f8fafc;
//         }

//         .subscribers-table {
//             margin-top: 20px;
//         }

//         .subscribers-table th,
//         .subscribers-table td {
//             padding: 12px 15px;
//         }

//         .status-badge {
//             padding: 4px 12px;
//             border-radius: 20px;
//             font-size: 0.75rem;
//             font-weight: 600;
//             text-transform: uppercase;
//         }

//         .status-pending {
//             background: #fed7d7;
//             color: #c53030;
//         }

//         .status-processing {
//             background: #feebc8;
//             color: #dd6b20;
//         }

//         .status-delivered {
//             background: #c6f6d5;
//             color: #2f855a;
//         }

//         .status-cancelled {
//             background: #e2e8f0;
//             color: #4a5568;
//         }

//         /* Newsletter Form Styles */
//         .newsletter-form {
//             padding: 30px;
//         }

//         .form-group {
//             margin-bottom: 20px;
//         }

//         .form-group label {
//             display: block;
//             margin-bottom: 8px;
//             font-weight: 600;
//             color: #2d3748;
//         }

//         .form-group input,
//         .form-group textarea,
//         .form-group select {
//             width: 100%;
//             padding: 12px 16px;
//             border: 2px solid #e2e8f0;
//             border-radius: 8px;
//             font-size: 14px;
//             transition: border-color 0.3s ease, box-shadow 0.3s ease;
//         }

//         .form-group textarea {
//             min-height: 120px;
//             resize: vertical;
//             font-family: inherit;
//         }

//         .form-group input:focus,
//         .form-group textarea:focus,
//         .form-group select:focus {
//             outline: none;
//             border-color: #667eea;
//             box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
//         }

//         .image-upload {
//             position: relative;
//             border: 2px dashed #cbd5e0;
//             border-radius: 8px;
//             padding: 40px;
//             text-align: center;
//             transition: all 0.3s ease;
//             cursor: pointer;
//         }

//         .image-upload:hover {
//             border-color: #667eea;
//             background: #f8fafc;
//         }

//         .image-upload.has-image {
//             border-style: solid;
//             border-color: #48bb78;
//         }

//         .image-preview {
//             max-width: 100%;
//             max-height: 200px;
//             border-radius: 8px;
//             margin-bottom: 10px;
//         }

//         .template-selector {
//             display: grid;
//             grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
//             gap: 15px;
//             margin-top: 10px;
//         }

//         .template-option {
//             padding: 15px;
//             border: 2px solid #e2e8f0;
//             border-radius: 8px;
//             text-align: center;
//             cursor: pointer;
//             transition: all 0.3s ease;
//             background: white;
//         }

//         .template-option:hover {
//             border-color: #667eea;
//             box-shadow: 0 2px 8px rgba(102, 126, 234, 0.1);
//         }

//         .template-option.selected {
//             border-color: #667eea;
//             background: #f0f4ff;
//         }

//         .template-option h4 {
//             margin: 0 0 5px 0;
//             color: #2d3748;
//             font-size: 14px;
//         }

//         .template-option p {
//             margin: 0;
//             color: #718096;
//             font-size: 12px;
//         }

//         .chart-container {
//             background: rgba(255, 255, 255, 0.95);
//             backdrop-filter: blur(10px);
//             border-radius: 15px;
//             box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
//             overflow: hidden;
//             margin-top: 30px; 
//         }

//         .chart-content {
//             padding: 20px;
//             height: 400px;
//         }

//         .modal {
//             display: none;
//             position: fixed;
//             z-index: 1000;
//             left: 0;
//             top: 0;
//             width: 100%;
//             height: 100%;
//             background: rgba(0, 0, 0, 0.5);
//             backdrop-filter: blur(5px);
//         }

//         .modal-content {
//             background: white;
//             margin: 5% auto;
//             padding: 0;
//             border-radius: 15px;
//             width: 90%;
//             max-width: 600px;
//             max-height: 80vh;
//             overflow: hidden;
//             box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
//         }

//         .preview-modal .modal-content {
//             max-width: 800px;
//         }

//         .modal-header {
//             background: linear-gradient(135deg, #667eea, #764ba2);
//             color: white;
//             padding: 20px 30px;
//             display: flex;
//             justify-content: space-between;
//             align-items: center;
//         }

//         .modal-body {
//             padding: 30px;
//             max-height: 60vh;
//             overflow-y: auto;
//         }

//         .preview-modal .modal-body {
//             padding: 0;
//         }

//         .close {
//             color: white;
//             font-size: 28px;
//             font-weight: bold;
//             cursor: pointer;
//             transition: opacity 0.3s ease;
//         }

//         .close:hover {
//             opacity: 0.7;
//         }

//         .order-detail {
//             display: grid;
//             grid-template-columns: 1fr 1fr;
//             gap: 20px;
//             margin-bottom: 20px;
//         }

//         .order-detail .detail-item {
//             background: #f8fafc;
//             padding: 15px;
//             border-radius: 8px;
//             border-left: 4px solid #667eea;
//         }

//         .order-detail .detail-item strong {
//             display: block;
//             color: #2d3748;
//             margin-bottom: 5px;
//             font-size: 0.875rem;
//             text-transform: uppercase;
//             letter-spacing: 0.5px;
//         }

//         .pagination {
//             padding: 20px 30px;
//             display: flex;
//             justify-content: center;
//             align-items: center;
//             gap: 10px;
//             background: #f8fafc;
//         }

//         .pagination button {
//             padding: 8px 12px;
//             border: 1px solid #e2e8f0;
//             background: white;
//             border-radius: 6px;
//             cursor: pointer;
//             transition: all 0.3s ease;
//         }

//         .pagination button:hover:not(:disabled) {
//             background: #667eea;
//             color: white;
//         }

//         .pagination button:disabled {
//             opacity: 0.5;
//             cursor: not-allowed;
//         }

//         .pagination .current {
//             background: #667eea;
//             color: white;
//             border-color: #667eea;
//         }

//         .loading {
//             display: none;
//             text-align: center;
//             padding: 40px;
//             color: #718096;
//         }

//         .loading i {
//             font-size: 2rem;
//             animation: spin 1s linear infinite;
//         }

//         @keyframes spin {
//             0% { transform: rotate(0deg); }
//             100% { transform: rotate(360deg); }
//         }

//         .no-data {
//             text-align: center;
//             padding: 40px;
//             color: #718096;
//         }

//         .no-data i {
//             font-size: 3rem;
//             margin-bottom: 15px;
//             opacity: 0.5;
//         }

//         .preview-frame {
//             width: 100%;
//             height: 600px;
//             border: none;
//             border-radius: 8px;
//             background: white;
//         }

//         @media (max-width: 768px) {
//             .filters {
//                 flex-direction: column;
//                 align-items: stretch;
//             }
            
//             .header {
//                 flex-direction: column;
//                 gap: 15px;
//             }
            
//             .export-buttons {
//                 flex-direction: column;
//             }

//             .orders-table,
//             .subscribers-table {
//                 font-size: 0.875rem;
//             }

//             .orders-table th,
//             .orders-table td,
//             .subscribers-table th,
//             .subscribers-table td {
//                 padding: 10px 8px;
//             }

//             .newsletter-form > div {
//                 grid-template-columns: 1fr !important;
//             }
//         }
//     </style>
// </head>
// <body>
//     <div class="container">
//         <!-- Header -->
//         <div class="header">
//             <h1><i class="fas fa-tachometer-alt"></i> MyOreva Admin Dashboard</h1>
//             <div class="user-info">
//                 <span><i class="fas fa-user-circle"></i> Admin</span>
//                 <div class="export-buttons">
//                     <button class="btn btn-secondary" onclick="exportToExcel()">
//                         <i class="fas fa-file-excel"></i> Excel
//                     </button>
//                     <button class="btn btn-secondary" onclick="exportToPDF()">
//                         <i class="fas fa-file-pdf"></i> PDF
//                     </button>
//                 </div>
//             </div>
//         </div>

//         <!-- Statistics Cards -->
//         <div class="stats-grid">
//             <div class="stat-card total">
//                 <i class="fas fa-shopping-cart icon"></i>
//                 <h3 id="totalOrders">-</h3>
//                 <p>Total Orders</p>
//             </div>
//             <div class="stat-card revenue">
//                 <i class="fas fa-money-bill-wave icon"></i>
//                 <h3 id="totalRevenue">₦-</h3>
//                 <p>Total Revenue</p>
//             </div>
//             <div class="stat-card pending">
//                 <i class="fas fa-clock icon"></i>
//                 <h3 id="pendingOrders">-</h3>
//                 <p>Pending Orders</p>
//             </div>
//             <div class="stat-card delivered">
//                 <i class="fas fa-check-circle icon"></i>
//                 <h3 id="deliveredOrders">-</h3>
//                 <p>Delivered Orders</p>
//             </div>
//             <div class="stat-card newsletter">
//                 <i class="fas fa-envelope icon"></i>
//                 <h3 id="totalSubscribers">-</h3>
//                 <p>Newsletter Subscribers</p>
//             </div>
//         </div>

//         <!-- Dashboard Content (only orders-section) -->
//         <div class="dashboard-content">
//             <!-- Orders Section -->
//             <div class="orders-section">
//                 <div class="section-header">
//                     <h2><i class="fas fa-list"></i> Orders Management</h2>
//                     <span id="orderCount">0 orders</span>
//                 </div>

//                 <!-- Filters -->
//                 <div class="filters">
//                     <div class="filter-group">
//                         <label>Search</label>
//                         <input type="text" id="searchInput" placeholder="Name, phone, address...">
//                     </div>
//                     <div class="filter-group">
//                         <label>Status</label>
//                         <select id="statusFilter">
//                             <option value="all">All Status</option>
//                             <option value="pending">Pending</option>
//                             <option value="processing">Processing</option>
//                             <option value="delivered">Delivered</option>
//                             <option value="cancelled">Cancelled</option>
//                         </select>
//                     </div>
//                     <div class="filter-group">
//                         <label>Package</label>
//                         <select id="packageFilter">
//                             <option value="all">All Packages</option>
//                         </select>
//                     </div>
//                     <div class="filter-group">
//                         <label>From Date</label>
//                         <input type="date" id="startDate">
//                     </div>
//                     <div class="filter-group">
//                         <label>To Date</label>
//                         <input type="date" id="endDate">
//                     </div>
//                     <div class="filter-group">
//                         <label>&nbsp;</label>
//                         <button class="btn btn-primary" onclick="applyFilters()">
//                             <i class="fas fa-filter"></i> Apply Filters
//                         </button>
//                     </div>
//                 </div>

//                 <!-- Loading -->
//                 <div class="loading" id="loading">
//                     <i class="fas fa-spinner"></i>
//                     <p>Loading orders...</p>
//                 </div>

//                 <!-- Orders Table -->
//                 <div style="overflow-x: auto;">
//                     <table class="orders-table" id="ordersTable">
//                         <thead>
//                             <tr>
//                                 <th>Full Name</th>
//                                 <th>Phone</th>
//                                 <th>Package</th>
//                                 <th>Address</th>
//                                 <th>Date</th>
//                                 <th>Status</th>
//                                 <th>Actions</th>
//                             </tr>
//                         </thead>
//                         <tbody id="ordersTableBody">
//                         </tbody>
//                     </table>
//                 </div>

//                 <div class="no-data" id="noData" style="display: none;">
//                     <i class="fas fa-inbox"></i>
//                     <h3>No orders found</h3>
//                     <p>Try adjusting your filters or check back later.</p>
//                 </div>

//                 <div class="pagination" id="pagination">
//                 </div>
//             </div>
//         </div>

//         <div class="chart-container">
//             <div class="section-header">
//                 <h2><i class="fas fa-chart-pie"></i> Package Analytics</h2>
//             </div>
//             <div class="chart-content">
//                 <canvas id="packageChart"></canvas>
//             </div>
//         </div>

        
//         <!-- Newsletter Management Section -->
//         <div class="newsletter-section">
//             <div class="section-header">
//                 <h2><i class="fas fa-paper-plane"></i> Newsletter Management</h2>
//                 <button class="btn btn-secondary" onclick="toggleNewsletterSection()">
//                     <i class="fas fa-users"></i> <span id="subscriberCount">0 Subscribers</span>
//                 </button>
//             </div>

//             <!-- Newsletter Form -->
//             <div class="newsletter-form" id="newsletterForm">
//                 <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 30px;">
//                     <!-- Left Column -->
//                     <div>
//                         <div class="form-group">
//                             <label>Subject</label>
//                             <input type="text" id="newsletterSubject" placeholder="Enter email subject...">
//                         </div>
                        
//                         <div class="form-group">
//                             <label>Message</label>
//                             <textarea id="newsletterMessage" placeholder="Enter your newsletter content here..."></textarea>
//                         </div>
                        
//                         <div class="form-group">
//                             <label>Newsletter Image (Optional)</label>
//                             <div class="image-upload" onclick="document.getElementById('newsletterImage').click()">
//                                 <input type="file" id="newsletterImage" accept="image/*" style="display: none;" onchange="handleImageUpload(this)">
//                                 <div id="imageUploadContent">
//                                     <i class="fas fa-cloud-upload-alt" style="font-size: 24px; color: #cbd5e0; margin-bottom: 10px;"></i>
//                                     <p style="margin: 0; color: #718096;">Click to upload an image</p>
//                                     <p style="margin: 5px 0 0 0; color: #a0aec0; font-size: 12px;">JPG, PNG up to 5MB</p>
//                                 </div>
//                             </div>
//                         </div>
//                     </div>
                    
//                     <!-- Right Column -->
//                     <div>
//                         <div class="form-group">
//                             <label>Email Template</label>
//                             <div class="template-selector" id="templateSelector">
//                                 <!-- Templates will be loaded here -->
//                             </div>
//                         </div>
                        
//                         <div class="form-group">
//                             <label>&nbsp;</label>
//                             <button class="btn btn-secondary" onclick="previewNewsletter()" style="width: 100%; margin-bottom: 10px;">
//                                 <i class="fas fa-eye"></i> Preview Newsletter
//                             </button>
//                             <button class="btn btn-primary" onclick="sendNewsletter()" style="width: 100%;">
//                                 <i class="fas fa-paper-plane"></i> Send Newsletter
//                             </button>
//                         </div>
//                     </div>
//                 </div>
//             </div>

//             <!-- Subscribers List -->
//             <div id="subscribersList" style="display: none;">
//                 <div style="padding: 20px 30px; background: #f8fafc; border-top: 1px solid #e2e8f0;">
//                     <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
//                         <h3 style="margin: 0; color: #2d3748;">Subscribers List</h3>
//                         <button class="btn btn-secondary" onclick="refreshSubscribers()">
//                             <i class="fas fa-refresh"></i> Refresh
//                         </button>
//                     </div>
                    
//                     <div style="overflow-x: auto;">
//                         <table class="subscribers-table">
//                             <thead>
//                                 <tr>
//                                     <th>Email</th>
//                                     <th>Subscribed Date</th>
//                                     <th>Actions</th>
//                                 </tr>
//                             </thead>
//                             <tbody id="subscribersTableBody">
//                             </tbody>
//                         </table>
//                     </div>
//                 </div>
//             </div>
//         </div>


//         <!-- Order Details Modal -->
//         <div id="orderModal" class="modal">
//             <div class="modal-content">
//                 <div class="modal-header">
//                     <h2><i class="fas fa-eye"></i> Order Details</h2>
//                     <span class="close" onclick="closeModal()">&times;</span>
//                 </div>
//                 <div class="modal-body" id="orderDetails">
//                 </div>
//             </div>
//         </div>

//         <!-- Status Update Modal -->
//         <div id="statusModal" class="modal">
//             <div class="modal-content">
//                 <div class="modal-header">
//                     <h2><i class="fas fa-edit"></i> Update Order Status</h2>
//                     <span class="close" onclick="closeStatusModal()">&times;</span>
//                 </div>
//                 <div class="modal-body">
//                     <div class="filter-group">
//                         <label>Select New Status</label>
//                         <select id="newStatus" style="width: 100%; padding: 12px;">
//                             <option value="processing">Processing</option>
//                             <option value="delivered">Delivered</option>
//                             <option value="cancelled">Cancelled</option>
//                         </select>
//                     </div>
//                     <div style="margin-top: 20px; text-align: right;">
//                         <button class="btn btn-secondary" onclick="closeStatusModal()">Cancel</button>
//                         <button class="btn btn-primary" onclick="updateOrderStatus()" style="margin-left: 10px;">
//                             <i class="fas fa-save"></i> Update Status
//                         </button>
//                     </div>
//                 </div>
//             </div>
//         </div>

//         <!-- Newsletter Preview Modal -->
//         <div id="previewModal" class="modal preview-modal">
//             <div class="modal-content">
//                 <div class="modal-header">
//                     <h2><i class="fas fa-eye"></i> Newsletter Preview</h2>
//                     <span class="close" onclick="closePreviewModal()">&times;</span>
//                 </div>
//                 <div class="modal-body" style="padding: 0;">
//                     <iframe id="previewFrame" class="preview-frame"></iframe>
//                 </div>
//             </div>
//         </div>
//     </div>

//     <script>
//         let currentPage = 1;
//         let currentOrderId = null;
//         let packageChart = null;

//         // Newsletter Management Variables
//         let selectedTemplate = 'modern';
//         let newsletterImage = null;

//         // Initialize dashboard
//         document.addEventListener('DOMContentLoaded', function() {
//             loadStats();
//             loadOrders();
//             initializeChart();
//             loadNewsletterTemplates();
//             loadSubscriberCount();
//         });

//         // Load statistics
//         async function loadStats() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/admin/stats');
//                 const data = await response.json();
                
//                 if (data.data) {
//                     document.getElementById('totalOrders').textContent = data.data.totalOrders;
//                     document.getElementById('totalRevenue').textContent = `₦${data.data.totalRevenue.toLocaleString()}`;
                    
//                     // Calculate pending and delivered from status breakdown
//                     let pendingCount = 0;
//                     let deliveredCount = 0;
                    
//                     data.data.statusBreakdown.forEach(status => {
//                         if (status._id === 'pending') pendingCount = status.count;
//                         if (status._id === 'delivered') deliveredCount = status.count;
//                     });
                    
//                     document.getElementById('pendingOrders').textContent = pendingCount;
//                     document.getElementById('deliveredOrders').textContent = deliveredCount;
                    
//                     // Update chart
//                     updatePackageChart(data.data.packageBreakdown);
//                 }
//             } catch (error) {
//                 console.error('Error loading stats:', error);
//             }
//         }

//         // Load orders with filters
//         async function loadOrders(page = 1) {
//             const loading = document.getElementById('loading');
//             const table = document.getElementById('ordersTable');
//             const noData = document.getElementById('noData');
            
//             loading.style.display = 'block';
//             table.style.display = 'none';
//             noData.style.display = 'none';
            
//             try {
//                 const params = new URLSearchParams({
//                     page: page,
//                     limit: 10,
//                     status: document.getElementById('statusFilter').value,
//                     package: document.getElementById('packageFilter').value,
//                     search: document.getElementById('searchInput').value,
//                     startDate: document.getElementById('startDate').value,
//                     endDate: document.getElementById('endDate').value
//                 });
                
//                 const response = await fetch(`http://localhost:6500/api/admin/orders?${params}`);
//                 const data = await response.json();
                
//                 if (data.data && data.data.length > 0) {
//                     displayOrders(data.data);
//                     displayPagination(data.pagination);
//                     document.getElementById('orderCount').textContent = `${data.pagination.totalOrders} orders`;
//                     table.style.display = 'table';
//                 } else {
//                     noData.style.display = 'block';
//                     document.getElementById('orderCount').textContent = '0 orders';
//                     document.getElementById('pagination').innerHTML = '';
//                 }
                
//                 currentPage = page;
//             } catch (error) {
//                 console.error('Error loading orders:', error);
//                 noData.style.display = 'block';
//             } finally {
//                 loading.style.display = 'none';
//             }
//         }

//         // Display orders in table
//         function displayOrders(orders) {
//             const tbody = document.getElementById('ordersTableBody');
//             tbody.innerHTML = '';
            
//             orders.forEach(order => {
//                 const row = document.createElement('tr');
//                 row.innerHTML = `
//                     <td>${order.fullName}</td>
//                     <td>${Array.isArray(order.phone) ? order.phone.join(', ') : order.phone}</td>
//                     <td><span class="status-badge status-${order.package}">${order.package.toUpperCase()}</span></td>
//                     <td>${order.address}, ${order.city}</td>
//                     <td>${new Date(order.createdAt).toLocaleDateString()}</td>
//                     <td><span class="status-badge status-${order.status}">${order.status.toUpperCase()}</span></td>
//                     <td>
//                         <button class="btn btn-secondary" onclick="viewOrderDetails('${order._id}')" style="margin-right: 5px;">
//                             <i class="fas fa-eye"></i>
//                         </button>
//                         <button class="btn btn-primary" onclick="openStatusModal('${order._id}', '${order.status}')" style="margin-right: 5px;">
//                             <i class="fas fa-edit"></i>
//                         </button>
//                         <button class="btn btn-danger" onclick="deleteOrder('${order._id}')">
//                             <i class="fas fa-trash"></i>
//                         </button>
//                     </td>
//                 `;
//                 tbody.appendChild(row);
//             });
//         }

//         // Display pagination
//         function displayPagination(pagination) {
//             const paginationDiv = document.getElementById('pagination');
//             paginationDiv.innerHTML = '';
            
//             // Previous button
//             const prevBtn = document.createElement('button');
//             prevBtn.innerHTML = '<i class="fas fa-chevron-left"></i> Previous';
//             prevBtn.disabled = !pagination.hasPrev;
//             prevBtn.onclick = () => loadOrders(pagination.currentPage - 1);
//             paginationDiv.appendChild(prevBtn);
            
//             // Page numbers
//             const startPage = Math.max(1, pagination.currentPage - 2);
//             const endPage = Math.min(pagination.totalPages, pagination.currentPage + 2);
            
//             for (let i = startPage; i <= endPage; i++) {
//                 const pageBtn = document.createElement('button');
//                 pageBtn.textContent = i;
//                 pageBtn.className = i === pagination.currentPage ? 'current' : '';
//                 pageBtn.onclick = () => loadOrders(i);
//                 paginationDiv.appendChild(pageBtn);
//             }
            
//             // Next button
//             const nextBtn = document.createElement('button');
//             nextBtn.innerHTML = 'Next <i class="fas fa-chevron-right"></i>';
//             nextBtn.disabled = !pagination.hasNext;
//             nextBtn.onclick = () => loadOrders(pagination.currentPage + 1);
//             paginationDiv.appendChild(nextBtn);
//         }

//         // Apply filters
//         function applyFilters() {
//             currentPage = 1;
//             loadOrders(1);
//         }

//         // View order details
//         async function viewOrderDetails(orderId) {
//             try {
//                 const response = await fetch(`http://localhost:6500/api/admin/orders/${orderId}`);
//                 const data = await response.json();
                
//                 if (data.data) {
//                     const order = data.data;
//                     const detailsHtml = `
//                         <div class="order-detail">
//                             <div class="detail-item">
//                                 <strong>Full Name</strong>
//                                 ${order.fullName}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Phone Numbers</strong>
//                                 ${Array.isArray(order.phone) ? order.phone.join(', ') : order.phone}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>WhatsApp Phone</strong>
//                                 ${order.whatsappPhone || 'Not provided'}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Package</strong>
//                                 ${order.package.toUpperCase()}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Address</strong>
//                                 ${order.address}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>City</strong>
//                                 ${order.city}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>State</strong>
//                                 ${order.state}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Price</strong>
//                                 ₦${order.price.toLocaleString()}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Availability</strong>
//                                 ${order.availability.toUpperCase()}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Status</strong>
//                                 <span class="status-badge status-${order.status}">${order.status.toUpperCase()}</span>
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Order Date</strong>
//                                 ${new Date(order.createdAt).toLocaleString()}
//                             </div>
//                             <div class="detail-item">
//                                 <strong>Last Updated</strong>
//                                 ${new Date(order.updatedAt).toLocaleString()}
//                             </div>
//                         </div>
//                     `;
                    
//                     document.getElementById('orderDetails').innerHTML = detailsHtml;
//                     document.getElementById('orderModal').style.display = 'block';
//                 }
//             } catch (error) {
//                 console.error('Error loading order details:', error);
//                 alert('Error loading order details');
//             }
//         }

//         // Open status update modal
//         function openStatusModal(orderId, currentStatus) {
//             currentOrderId = orderId;
//             document.getElementById('newStatus').value = currentStatus;
//             document.getElementById('statusModal').style.display = 'block';
//         }

//         // Update order status
//         async function updateOrderStatus() {
//             if (!currentOrderId) return;
//             try {
//                 const newStatus = document.getElementById('newStatus').value;
//                 const response = await fetch(`http://localhost:6500/api/admin/orders/${currentOrderId}/status`, {
//                     method: 'PUT',
//                     headers: {
//                         'Content-Type': 'application/json'
//                     },
//                     body: JSON.stringify({ status: newStatus })
//                 });
                
//                 if (response.ok) {
//                     const result = await response.json();
//                     closeStatusModal();
//                     loadOrders(currentPage);
//                     loadStats();
                    
//                     let alertMessage = 'Order status updated successfully!';
                    
//                     if (result.notifications) {
//                         const { sms, email } = result.notifications;
                        
//                         if (sms.success) {
//                             alertMessage += '\n✅ SMS notification sent to customer';
//                         } else if (sms.message !== 'No SMS sent') {
//                             alertMessage += '\n⚠️ SMS notification failed';
//                         }
                        
//                         if (email.success) {
//                             alertMessage += '\n✅ Email notification sent to customer';
//                         } else if (email.message !== 'No email sent') {
//                             alertMessage += '\n⚠️ Email notification failed';
//                         }
//                     }
                    
//                     alert(alertMessage);
//                 } else {
//                     alert('Error updating order status');
//                 }
//             } catch (error) {
//                 console.error('Error updating status:', error);
//                 alert('Error updating order status');
//             }
//         }

//         // Delete order
//         async function deleteOrder(orderId) {
//             if (!confirm('Are you sure you want to delete this order?')) return;
            
//             try {
//                 const response = await fetch(`http://localhost:6500/api/admin/orders/${orderId}`, {
//                     method: 'DELETE'
//                 });
                
//                 if (response.ok) {
//                     loadOrders(currentPage);
//                     loadStats();
//                     alert('Order deleted successfully!');
//                 } else {
//                     alert('Error deleting order');
//                 }
//             } catch (error) {
//                 console.error('Error deleting order:', error);
//                 alert('Error deleting order');
//             }
//         }

//         // Initialize chart
//         function initializeChart() {
//             const ctx = document.getElementById('packageChart').getContext('2d');
//             packageChart = new Chart(ctx, {
//                 type: 'doughnut',
//                 data: {
//                     labels: [],
//                     datasets: [{
//                         data: [],
//                         backgroundColor: [
//                             '#667eea',
//                             '#764ba2',
//                             '#f093fb',
//                             '#f5576c',
//                             '#4facfe'
//                         ],
//                         borderWidth: 0
//                     }]
//                 },
//                 options: {
//                     responsive: true,
//                     maintainAspectRatio: false,
//                     plugins: {
//                         legend: {
//                             position: 'bottom',
//                             labels: {
//                                 padding: 20,
//                                 font: {
//                                     size: 12
//                                 }
//                             }
//                         }
//                     }
//                 }
//             });
//         }

//         // Update package chart
//         function updatePackageChart(packageData) {
//             if (!packageChart) return;
            
//             const labels = [];
//             const data = [];
            
//             packageData.forEach(pkg => {
//                 labels.push(pkg._id.toUpperCase());
//                 data.push(pkg.count);
//             });
            
//             packageChart.data.labels = labels;
//             packageChart.data.datasets[0].data = data;
//             packageChart.update();
//         }

//         // Newsletter Management Functions
//         // Load newsletter templates
//         async function loadNewsletterTemplates() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/mail/templates');
//                 const data = await response.json();
                
//                 if (data.data) {
//                     const templateSelector = document.getElementById('templateSelector');
//                     templateSelector.innerHTML = '';
                    
//                     data.data.forEach((template, index) => {
//                         const templateDiv = document.createElement('div');
//                         templateDiv.className = `template-option ${index === 0 ? 'selected' : ''}`;
//                         templateDiv.onclick = () => selectTemplate(template.id, templateDiv);
//                         templateDiv.innerHTML = `
//                             <h4>${template.name}</h4>
//                             <p>Click to select</p>
//                         `;
//                         templateSelector.appendChild(templateDiv);
//                     });
                    
//                     if (data.data.length > 0) {
//                         selectedTemplate = data.data[0].id;
//                     }
//                 }
//             } catch (error) {
//                 console.error('Error loading templates:', error);
//             }
//         }

//         // Select template
//         function selectTemplate(templateId, element) {
//             selectedTemplate = templateId;
//             document.querySelectorAll('.template-option').forEach(option => {
//                 option.classList.remove('selected');
//             });
//             element.classList.add('selected');
//         }
// // gggggggggggggggggggggggggggggggggggg
// // ggggggggggggg
//         // Handle image upload
//         function handleImageUpload(input) {
//             const file = input.files[0];
//             if (!file) return;
            
//             if (file.size > 5 * 1024 * 1024) {
//                 alert('Image size should be less than 5MB');
//                 return;
//             }
            
//             const reader = new FileReader();
//             reader.onload = function(e) {
//                 newsletterImage = e.target.result;
//                 const uploadContent = document.getElementById('imageUploadContent');
//                 uploadContent.innerHTML = `
//                     <img src="${e.target.result}" class="image-preview" alt="Newsletter Image">
//                     <p style="margin: 0; color: #48bb78; font-weight: 600;">Image uploaded successfully</p>
//                     <p style="margin: 5px 0 0 0; color: #718096; font-size: 12px;">Click to change image</p>
//                 `;
//                 document.querySelector('.image-upload').classList.add('has-image');
//             };
//             reader.readAsDataURL(file);
//         }

//         // Load subscriber count
//         async function loadSubscriberCount() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/mail/subscribers');
//                 const data = await response.json();
                
//                 if (data.data) {
//                     document.getElementById('totalSubscribers').textContent = data.count;
//                     document.getElementById('subscriberCount').textContent = `${data.count} Subscribers`;
//                 }
//             } catch (error) {
//                 console.error('Error loading subscriber count:', error);
//             }
//         }

//         // Toggle newsletter section
//         function toggleNewsletterSection() {
//             const form = document.getElementById('newsletterForm');
//             const list = document.getElementById('subscribersList');
            
//             if (list.style.display === 'none') {
//                 form.style.display = 'none';
//                 list.style.display = 'block';
//                 loadSubscribers();
//             } else {
//                 form.style.display = 'block';
//                 list.style.display = 'none';
//             }
//         }

//         // Load subscribers
//         async function loadSubscribers() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/mail/subscribers');
//                 const data = await response.json();
                
//                 if (data.data) {
//                     const tbody = document.getElementById('subscribersTableBody');
//                     tbody.innerHTML = '';
                    
//                     data.data.forEach(subscriber => {
//                         const row = document.createElement('tr');
//                         row.innerHTML = `
//                             <td>${subscriber.email}</td>
//                             <td>${new Date(subscriber.subscribedAt).toLocaleDateString()}</td>
//                             <td>
//                                 <button class="btn btn-danger" onclick="deleteSubscriber('${subscriber._id}')">
//                                     <i class="fas fa-trash"></i>
//                                 </button>
//                             </td>
//                         `;
//                         tbody.appendChild(row);
//                     });
//                 }
//             } catch (error) {
//                 console.error('Error loading subscribers:', error);
//             }
//         }

//         // Delete subscriber
//         async function deleteSubscriber(subscriberId) {
//             if (!confirm('Are you sure you want to delete this subscriber?')) return;
            
//             try {
//                 const response = await fetch(`http://localhost:6500/api/mail/subscribers/${subscriberId}`, {
//                     method: 'DELETE'
//                 });
                
//                 if (response.ok) {
//                     loadSubscribers();
//                     loadSubscriberCount();
//                     alert('Subscriber deleted successfully!');
//                 } else {
//                     alert('Error deleting subscriber');
//                 }
//             } catch (error) {
//                 console.error('Error deleting subscriber:', error);
//                 alert('Error deleting subscriber');
//             }
//         }

//         // Refresh subscribers
//         function refreshSubscribers() {
//             loadSubscribers();
//             loadSubscriberCount();
//         }

//        async function previewNewsletter() {
//     const subject = document.getElementById('newsletterSubject').value;
//     const message = document.getElementById('newsletterMessage').value;
    
//     if (!subject || !message) {
//         alert('Please fill in subject and message');
//         return;
//     }

//     const payload = JSON.stringify({
//         subject,
//         message,
//         template: selectedTemplate,
//         image: newsletterImage
//     });
//     console.log("Payload size:", new Blob([payload]).size / (1024 * 1024), "MB"); // Log size in MB

//     try {
//         const response = await fetch('http://localhost:6500/api/mail/preview', {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json'
//             },
//             body: payload
//         });

//         if (response.status === 413) {
//             alert("Request payload too large. Please use a smaller image or shorter message.");
//             return;
//         }

//         const data = await response.json();
//         if (data.data) {
//             const previewFrame = document.getElementById('previewFrame');
//             previewFrame.srcdoc = data.data.html;
//             document.getElementById('previewModal').style.display = 'block';
//         } else {
//             alert(`Error: ${data.message}`);
//         }
//     } catch (error) {
//         console.error('Error previewing newsletter:', error);
//         alert('Error previewing newsletter');
//     }
// }

//         // Send newsletter
//         async function sendNewsletter() {
//             const subject = document.getElementById('newsletterSubject').value;
//             const message = document.getElementById('newsletterMessage').value;
            
//             if (!subject || !message) {
//                 alert('Please fill in subject and message');
//                 return;
//             }
            
//             if (!confirm('Are you sure you want to send this newsletter to all subscribers?')) return;
            
//             try {
//                 const response = await fetch('http://localhost:6500/api/mail/send', {
//                     method: 'POST',
//                     headers: {
//                         'Content-Type': 'application/json'
//                     },
//                     body: JSON.stringify({
//                         subject,
//                         message,
//                         template: selectedTemplate,
//                         image: newsletterImage
//                     })
//                 });
                
//                 const data = await response.json();
//                 if (response.ok) {
//                     alert(`Newsletter sent successfully!\n\nSent to: ${data.data.successCount} subscribers\nFailed: ${data.data.failedCount} subscribers`);
                    
//                     // Clear form
//                     document.getElementById('newsletterSubject').value = '';
//                     document.getElementById('newsletterMessage').value = '';
//                     newsletterImage = null;
//                     document.getElementById('imageUploadContent').innerHTML = `
//                         <i class="fas fa-cloud-upload-alt" style="font-size: 24px; color: #cbd5e0; margin-bottom: 10px;"></i>
//                         <p style="margin: 0; color: #718096;">Click to upload an image</p>
//                         <p style="margin: 5px 0 0 0; color: #a0aec0; font-size: 12px;">JPG, PNG up to 5MB</p>
//                     `;
//                     document.querySelector('.image-upload').classList.remove('has-image');
//                 } else {
//                     alert(`Error sending newsletter: ${data.message}`);
//                 }
//             } catch (error) {
//                 console.error('Error sending newsletter:', error);
//                 alert('Error sending newsletter');
//             }
//         }

//         // Export functions
//         async function exportToExcel() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/admin/export/excel');
//                 const blob = await response.blob();
//                 const url = window.URL.createObjectURL(blob);
//                 const a = document.createElement('a');
//                 a.href = url;
//                 a.download = 'orders.xlsx';
//                 a.click();
//                 window.URL.revokeObjectURL(url);
//             } catch (error) {
//                 console.error('Error exporting to Excel:', error);
//                 alert('Error exporting to Excel');
//             }
//         }

//         async function exportToPDF() {
//             try {
//                 const response = await fetch('http://localhost:6500/api/admin/export/pdf');
//                 const blob = await response.blob();
//                 const url = window.URL.createObjectURL(blob);
//                 const a = document.createElement('a');
//                 a.href = url;
//                 a.download = 'orders.pdf';
//                 a.click();
//                 window.URL.revokeObjectURL(url);
//             } catch (error) {
//                 console.error('Error exporting to PDF:', error);
//                 alert('Error exporting to PDF');
//             }
//         }

//         // Modal functions
//         function closeModal() {
//             document.getElementById('orderModal').style.display = 'none';
//         }

//         function closeStatusModal() {
//             document.getElementById('statusModal').style.display = 'none';
//             currentOrderId = null;
//         }

//         function closePreviewModal() {
//             document.getElementById('previewModal').style.display = 'none';
//         }

//         // Close modals when clicking outside
//         window.onclick = function(event) {
//             const orderModal = document.getElementById('orderModal');
//             const statusModal = document.getElementById('statusModal');
//             const previewModal = document.getElementById('previewModal');
            
//             if (event.target === orderModal) {
//                 closeModal();
//             }
//             if (event.target === statusModal) {
//                 closeStatusModal();
//             }
//             if (event.target === previewModal) {
//                 closePreviewModal();
//             }
//         }

//         // Add event listeners for real-time filtering
//         document.getElementById('searchInput').addEventListener('input', debounce(applyFilters, 500));
//         document.getElementById('statusFilter').addEventListener('change', applyFilters);
//         document.getElementById('packageFilter').addEventListener('change', applyFilters);
//         document.getElementById('startDate').addEventListener('change', applyFilters);
//         document.getElementById('endDate').addEventListener('change', applyFilters);

//         // Debounce function for search input
//         function debounce(func, wait) {
//             let timeout;
//             return function executedFunction(...args) {
//                 const later = () => {
//                     clearTimeout(timeout);
//                     func(...args);
//                 };
//                 clearTimeout(timeout);
//                 timeout = setTimeout(later, wait);
//             };
//         }
//     </script>
// </body>
// </html>



//////////////////////////////////////////////////////////////////////////////////////////////////////////


/* const sendSMSNotification = async (order, newStatus) => {
  try {
    const sendTo = Array.isArray(order.phone) ? order.phone[0] : order.phone;
    const formattedPhone = sendTo.startsWith("+") ? sendTo : `+${sendTo}`;
    
    let smsMessage = "";
    
    if (newStatus === 'processing') {
      smsMessage = `Hi ${order.fullName}, great news! Your "${order.package}" package order is now being processed and will be delivered to ${order.address} soon. We'll keep you updated on the delivery progress. Thank you for choosing MyOreva!`;
    }
    if (newStatus === 'cancelled') {
      smsMessage = `Hello ${order.fullName}, we're sorry to inform you that your order for the "${order.package}" package has been cancelled. If you believe this was a mistake or need assistance, please contact our support team at support@myoreva.com or WhatsApp +234. Thank you for choosing MyOreva.`;
    }
    if (newStatus === 'delivered') {
      smsMessage = `Hi ${order.fullName}, your "${order.package}" package has been successfully delivered to ${order.address}. Thank you for choosing MyOreva! Contact us at support@myoreva.com or WhatsApp +234 if you have any questions.`;
    }
    
    if (smsMessage) {
      await client.messages.create({
        body: smsMessage,
        from: process.env.TWILIO_PHONE_NUMBER,
        to: formattedPhone,
      });
      
      console.log(`SMS sent successfully to ${formattedPhone} for order ${order._id}`);
      return { success: true, message: "SMS sent successfully" };
    }
    
    return { success: false, message: "No SMS needed for this status" };
  } catch (error) {
    console.error("Error sending SMS:", error.message);
    return { success: false, message: `SMS failed: ${error.message}` };
  }
};


const updateOrderPackageAndPrice = async (req, res) => {
  try {
    const { id } = req.params;
    const { package: packageName, price } = req.body;


    if (!packageName || !price) {
      return res.status(400).json({
        message: "Package name and price are required"
      });
    }

    if (isNaN(price) || price <= 0) {
      return res.status(400).json({
        message: "Price must be a valid positive number"
      });
    }


    const updatedOrder = await Order.findByIdAndUpdate(
      id,
      { 
        package: packageName,
        price: parseFloat(price),
        updatedAt: new Date() 
      },
      { new: true }
    );

    if (!updatedOrder) {
      return res.status(404).json({
        message: "Order not found"
      });
    }

    res.status(200).json({
      message: "Order package and price updated successfully",
      data: updatedOrder
    });
  } catch (error) {
    console.error("Error updating order package and price:", error);
    res.status(500).json({
      message: "Failed to update order package and price",
      error: error.message
    });
  }
}; */



